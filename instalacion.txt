//Para utilizar este proyecto y futuros proyectos subidos a git con el node_modules en el .gitignore

npm install

//Para instalar cypress desde cero en un proyecto nuevo. 

npm init

npm install cypress@9.7.0

npm install -g npx

npx cypress open

//Solo si da problemas:

npx cypress install --force  (opcional)

// Una vez hecho esto, cada vez que queramos realizar un proyecto nuevo, estos serán los comandos a instalar desde la terminal:

npm install cypress@9.7.0

npx cypress open

// Plugins a instalar:

Tab:

npm install -D cypress-plugin-tab

Xpath:

npm install -D cypress-xpath

Drag and Drop:

npm install --save-dev @4tw/cypress-drag-drop

//Configuación de Cucumber 

npm install --save-dev cypress-cucumber-preprocessor

en el directorio raiz, package.json escribir lo siguiente:

"cypress-cucumber-preprocessor": {
  "nonGlobalStepDefinitions": true
}

En plugins/index.js escribir lo siguiente

const cucumber = require('cypress-cucumber-preprocessor').default
module.exports = (on, config) => {
on('file:preprocessor', cucumber())
}

//Plugins de vaciar la carpeta downloads:

npm i -D cypress-delete-downloads-folder

Define en el plugin/index lo siguiente:

const { removeDirectory } = require('cypress-delete-downloads-folder');
module.exports = (on, config) => {
  on('task', { removeDirectory })
}

necesitas en el test este require 

require('cypress-delete-downloads-folder').addCustomCommand();

y luego en el spec hacer así el afterEach:

const { deleteDownloadsFolderAfterAll } = require('cypress-delete-downloads-folder');

describe('delete downloads folder after all', () => {
  deleteDownloadsFolderAfterAll()

  it('should work', () => {})
})





